@echo off
title MySQL Setup and Testing
color 0C

echo.
echo ========================================
echo   MYSQL SETUP AND TESTING
echo ========================================
echo.

REM Check if MySQL is installed
echo 🔍 Checking MySQL installation...
mysql --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ❌ MySQL command line client not found!
    echo.
    echo Please install MySQL from: https://dev.mysql.com/downloads/mysql/
    echo.
    echo After installation:
    echo 1. Add MySQL bin directory to your system PATH
    echo 2. Restart your command prompt
    echo 3. Run this script again
    echo.
    echo Alternative: Use MySQL Workbench for manual setup
    pause
    exit /b 1
) else (
    for /f "tokens=*" %%i in ('mysql --version') do set MYSQL_VERSION=%%i
    echo ✅ MySQL found: %MYSQL_VERSION%
)

echo.
echo ========================================
echo   MYSQL CONNECTION TEST
echo ========================================

echo Please enter your MySQL credentials:
echo.

set /p mysql_user="MySQL Username (default: root): "
if "%mysql_user%"=="" set mysql_user=root

set /p mysql_password="MySQL Password (press Enter if no password): "

echo.
echo 🔗 Testing MySQL connection...

REM Test connection
if "%mysql_password%"=="" (
    mysql -u %mysql_user% -e "SELECT 1 as connection_test;" 2>nul
) else (
    mysql -u %mysql_user% -p%mysql_password% -e "SELECT 1 as connection_test;" 2>nul
)

if %errorlevel% neq 0 (
    echo ❌ MySQL connection failed!
    echo.
    echo Common solutions:
    echo 1. Check if MySQL service is running:
    echo    net start mysql
    echo.
    echo 2. Verify username and password
    echo 3. Check if MySQL is listening on port 3306:
    echo    netstat -an | findstr :3306
    echo.
    echo 4. Try connecting with MySQL Workbench first
    echo.
    pause
    exit /b 1
) else (
    echo ✅ MySQL connection successful!
)

echo.
echo ========================================
echo   DATABASE SETUP
echo ========================================

echo 🗄️ Creating database 'student_lab_system'...

REM Create database
if "%mysql_password%"=="" (
    mysql -u %mysql_user% -e "CREATE DATABASE IF NOT EXISTS student_lab_system CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
) else (
    mysql -u %mysql_user% -p%mysql_password% -e "CREATE DATABASE IF NOT EXISTS student_lab_system CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
)

if %errorlevel% neq 0 (
    echo ❌ Failed to create database!
    echo You may need to create it manually with:
    echo CREATE DATABASE student_lab_system;
    pause
    exit /b 1
) else (
    echo ✅ Database 'student_lab_system' created successfully
)

echo.
echo ========================================
echo   DATABASE CONFIGURATION
echo ========================================

echo 📝 Creating database configuration file...

REM Navigate to server directory
cd /d "%~dp0..\..\System\server"

REM Create database config file
echo Creating db-config.js...
(
echo // Database Configuration
echo // Generated by SETUP_MYSQL.bat
echo.
echo module.exports = {
echo     host: 'localhost',
echo     user: '%mysql_user%',
echo     password: '%mysql_password%',
echo     database: 'student_lab_system',
echo     charset: 'utf8mb4',
echo     connectionLimit: 10,
echo     acquireTimeout: 60000,
echo     timeout: 60000,
echo     reconnect: true
echo };
) > db-config.js

if %errorlevel% neq 0 (
    echo ❌ Failed to create database configuration!
    pause
    exit /b 1
) else (
    echo ✅ Database configuration file created: db-config.js
)

echo.
echo ========================================
echo   TESTING DATABASE CONNECTION
echo ========================================

echo 🧪 Testing database connection from Node.js...

REM Create a test script
echo Creating database test script...
(
echo const mysql = require('mysql2/promise'^);
echo const config = require('./db-config.js'^);
echo.
echo async function testConnection(^) {
echo     try {
echo         const connection = await mysql.createConnection(config^);
echo         console.log('✅ Database connection successful!'^);
echo         await connection.execute('SELECT 1 as test'^);
echo         console.log('✅ Database query successful!'^);
echo         await connection.end(^);
echo         console.log('✅ Database connection closed successfully!'^);
echo         process.exit(0^);
echo     } catch (error^) {
echo         console.error('❌ Database connection failed:', error.message^);
echo         process.exit(1^);
echo     }
echo }
echo.
echo testConnection(^);
) > test-db-connection.js

REM Run the test
node test-db-connection.js
if %errorlevel% neq 0 (
    echo ❌ Database connection test failed!
    echo.
    echo Please check:
    echo 1. MySQL service is running
    echo 2. Database credentials are correct
    echo 3. Database 'student_lab_system' exists
    echo.
    pause
    exit /b 1
) else (
    echo ✅ Database connection test passed!
)

REM Clean up test file
del test-db-connection.js >nul 2>&1

echo.
echo ========================================
echo   MYSQL SETUP COMPLETED!
echo ========================================
echo.
echo ✅ MySQL: %MYSQL_VERSION%
echo ✅ Connection: Successful
echo ✅ Database: student_lab_system created
echo ✅ Configuration: db-config.js created
echo ✅ Test: Passed
echo.
echo Your MySQL setup is complete!
echo The system will automatically create tables when it starts.
echo.
pause